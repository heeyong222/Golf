<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.golfzon.golfzoin.mapper.JoinMapper">
	<!-- 온라인 조인 등록 -->
	<insert id="registonjoin" parameterType="map">
		insert 
			into dbo.golfzoin_joinlist 
			(
				type, 
				hostid, 
				date, 
				time, 
				totalcount, 
				pw, 
				title, 
				body, 
				thumbnail, 
				regdate
			)
		values
		(
			#{type}, 
			#{hostid}, 
			#{date}, 
			#{time}, 
			#{totalcount},
			CONVERT(int, #{pw}), 
			#{title},
			#{body}, 
			#{thumbnail}, 
			GETDATE()
		)
	</insert>
	<!-- 오프라인 조인 등록 -->
	<insert id="registoffjoin" parameterType="map">
		insert into 
			dbo.golfzoin_joinlist
			(
				type, 
				hostid, 
				date, 
				time, 
				totalcount, 
				place, 
				lat, 
				lon, 
				title, 
				body, 
				thumbnail, 
				regdate
			)
		values
			(
				#{type}, 
				#{hostid},
				#{date}, 
				#{time}, 
				CONVERT(int, #{totalcount}), 
				#{place}, 
				CONVERT(float, #{lat}), 
				CONVERT(float, #{lon}), 
				#{title}, 
				#{body}, 
				#{thumbnail}, 
				GETDATE()
			)
	</insert>
	<!-- 조인 등록 시 joinlistuser테이블에 모집장 추가  -->
	<insert id="registhost" parameterType="map">
		insert into 
			dbo.golfzoin_joinlist_user(type, roomNo, userid)
		values
			(
				#{type}, 
				(select 
					TOP 1 roomNo 
				from 
					dbo.golfzoin_joinlist 
				where 
					hostid = #{hostid}
				order by 
					roomNo desc), #{hostid}
			)
	</insert>
	<!-- 주변 오프라인 조인 조회  -->
	<select id="nearofflist" parameterType="map" resultType="joinOffDto">
		select 
			roomNo,
			 type, 
			 hostid,
			 date, 
			 time, 
			(select count(*) from dbo.golfzoin_joinlist_user ju where ju.roomNo = j.roomNo) as nowcount, 
			totalcount, 
			place, 
			lat, 
			lon, 
			title, 
			body, 
			thumbnail
		from 
			dbo.golfzoin_joinlist j with(nolock)
		where 
			(6371*acos(cos(radians(CONVERT(float, #{lat})))*cos(radians(j.lat))*cos(radians(j.lon)-radians(CONVERT(float, #{lon})))+sin(radians(CONVERT(float, #{lat})))*sin(radians(j.lat)))) <![CDATA[<]]> CONVERT(int, #{size})
		<if test='count != null'>
			and totalcount - (select count(*) from dbo.golfzoin_joinlist_user ju where ju.roomNo = j.roomNo)  <![CDATA[>=]]> CONVERT(int, #{count})
		</if>
		<if test='title != null'>
			and title like '${title}%'
		</if>
		<if test="date != null and !date.equals('')">
			and DATEDIFF(dd, date, #{date}) = 0
		</if>
		
	</select>
	<!-- 온라인 조인 조회 -->
	<select id="onlist" parameterType="map" resultType="joinOnDto">
		select 
			roomNo, 
			type, 
			hostid, 
			date, 
			time, 
			(select count(*) from dbo.golfzoin_joinlist_user ju where ju.roomNo = j.roomNo) as nowcount, 
			totalcount, 
			pw, 
			title, 
			body, 
			thumbnail
		from 
			dbo.golfzoin_joinlist j with(nolock)
		where 
			type = 'online'
		<if test='title != null'>
			and title like '${title}%'
		</if>
		<if test='date != null'>
			and DATEDIFF(dd, date, #{date}) = 0
		</if>
		<if test='count != null'>
			and totalcount - (select count(*) from dbo.golfzoin_joinlist_user ju where ju.roomNo = j.roomNo)  <![CDATA[>=]]> CONVERT(int, #{count})
		</if>
		<if test='follow != null'>
			and (select count(*) from dbo.golfzoin_follow f with(nolock)  where f.targetid = j.hostid) <![CDATA[>=]]>  CONVERT(int, #{follow})
		</if>
		order by 
			regdate DESC
		offset CONVERT(int, #{start})-1 rows
		fetch next 20 rows only;
	</select>
	<!-- 해당 방에 조인 한 유저들 정보 -->
	<select id="joinmembers" parameterType="int" resultType="joinMemberDto">
		select u.nickname, u.hit, DATEDIFF(year, u.birth, getdate())+1 as age, u.profile from dbo.golfzoin_user u
		join dbo.golfzoin_joinlist_user ju
		on u.id = ju.userid
		where ju.roomNo = #{roomNo}
		
	</select>
	<!-- 조인 신청  후 대기 DB에 등록-->
	<insert id="applyjoin" parameterType="map">
		insert into dbo.golfzoin_joinlist_temp
		values(#{type}, #{roomNo}, #{userid});
	</insert>
	
	
	<!-- 수락 대기중인 사용자 조회 -->
	<select id="jointempuser" parameterType="String" resultType="hostAlarmDto">
		select jt.type, u.id as userid, jt.roomNo, (select title from dbo.golfzoin_joinlist where roomNo = jt.roomNo) title, u.nickname, u.birth, u.gender, u.hit, u.profile from dbo.golfzoin_joinlist_temp jt
		join dbo.golfzoin_user u
		on u.id = jt.userid
		where roomNo in
		(select roomNo from dbo.golfzoin_joinlist 
		where hostid = #{userid})
		
	</select>
	
	
	<!-- <select id="jointempuser" parameterType="String" resultType="joinTempUserDto">
		select nickname, gender, DATEDIFF(year, birth, getdate())+1 as age, hit, profile
		from dbo.golfzoin_user
		where id in (select userid from dbo.golfzoin_joinlist_temp where hostid = #{userid});
	</select> -->
	
	<delete id="canceljoin" parameterType="String">
		delete from dbo.golfzoin_joinlist
		where roomNo = #{roomNo}
	</delete>
	
	<delete id="cancelmember" parameterType="String">
		delete from dbo.golfzoin_joinlist_user
		where roomNo = #{roomNo}
	</delete>
	
	
	<!-- 수락 후 조인리스트 유저 DB에 등록 -->
	<insert id="acceptuser" parameterType="map">
		insert into dbo.golfzoin_joinlist_user
		values (#{type}, #{roomNo}, (select id from dbo.golfzoin_user where nickname = #{nickname}))
	</insert>
	
	<!-- 대기상태 DB에서 유저 삭제 --> 
	<delete id="removetempuser" parameterType="map">
		delete from dbo.golfzoin_joinlist_temp
		where roomNo = #{roomNo} 
		and userid = (select id from dbo.golfzoin_user where nickname = #{nickname})
	</delete>
	
	<!-- 수락/거절 후 로그DB에 추가 -->
	<insert id="insertjoinlog" parameterType="map">
		insert into dbo.golfzoin_joinlist_log(type, roomNo, userid, logtype, regdate)
		values (#{type}, #{roomNo}, (select id from dbo.golfzoin_user where nickname = #{nickname}), #{logtype}, GETDATE());
	</insert>
	
	<!-- 조인 신ㅊ렁 거절 -->
	<delete id="refuseuser" parameterType="map">
		delete from dbo.golfzoin_joinlist_temp
		where type = #{type}
		and roomNo = #{roomNo}
		and userid = (select id as userid from dbo.golfzoin_user where nickname = #{nickname})
	</delete>
	
	<select id="showlog" parameterType="String" resultType="joinLogDto">
		select l.type, l.roomNo, title, logtype from dbo.golfzoin_joinlist_log l
		join dbo.golfzoin_joinlist j
		on j.roomNo = l.roomNo
		where userid = #{userid}
	</select>
	
	<delete id="deletelog" parameterType="map">
		delete from dbo.golfzoin_joinlist_log
		where roomNo = #{roomNo}
		and userid = #{userid}
	</delete>
	
	<!-- 메인페이지 온라인 오프라인 7개씩 조회 -->
	<select id="mainonlist" resultType="mainJoinDto">
		select TOP 7 type, roomNo, title, body, date, time, thumbnail from dbo.golfzoin_joinlist with(nolock)
		where type = 'online'
		order by regdate DESC
	</select>
	<select id="mainofflist" resultType="mainJoinDto">
		select TOP 7 type, roomNo, title, body, place, date, time, thumbnail from dbo.golfzoin_joinlist with(nolock)
		where type = 'offline'
		order by regdate DESC
	</select>
	
	<!-- 나의 조인 목록 조회(달력용) -->
	<select id="myjoinlist" parameterType="String" resultType="calendarDto">
		select j.roomNo, j.type, j.title, j.hostid, date, time, (select count(*) from dbo.golfzoin_joinlist_user where roomNo = ju.roomNo) as nowcount, totalcount, thumbnail
		from dbo.golfzoin_joinlist j
		left join dbo.golfzoin_joinlist_user ju
		on j.roomNo = ju.roomNo
		where ju.userid = #{userid}
	</select>
	<select id="joindetail" parameterType="map" resultType="joinDetailDto">
		select 
			j.*, 
			(select count(*) from dbo.golfzoin_joinlist_user where roomNo = j.roomNo) as nowcount,
			(select count(*) from dbo.golfzoin_joinlist_temp where roomNo = CONVERT(int, #{roomNo}) and userid = #{userid}) as isapply,
			(select count(*) from dbo.golfzoin_joinlist_user where roomNo = CONVERT(int, #{roomNo}) and userid = #{userid}) as isaccept
		from dbo.golfzoin_joinlist j
		where j.roomNo = CONVERT(int, #{roomNo})
	</select>
	
	
	<!-- 신청한 조인 취소 -->
	<delete id="cancelapply" parameterType="map">
		delete 
			from dbo.golfzoin_joinlist_user
		where
			userid = #{userid} 
			and
			roomNo = CONVERT(int, #{roomNo})
	</delete>
</mapper>